# .github/workflows/robust-deploy.yml
name: Robust Template Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy-templates:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        include:
          - name: "business-demo-devcontainer"
            path: "product-demo/devcontainer"
            display: "DevContainer Demo"
          - name: "business-demo-datascience"
            path: "product-demo/data-science"
            display: "Data Science Demo"
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false  # Important: prevents wrapper issues

      - name: Setup Coder
        uses: coder/setup-action@v1
        with:
          access_url: ${{ secrets.CODER_URL }}
          coder_session_token: ${{ secrets.CODER_SESSION_TOKEN }}

      - name: Debug and Validate ${{ matrix.display }}
        working-directory: ${{ matrix.path }}
        run: |
          echo "🔍 Debugging ${{ matrix.display }}..."
          echo "📁 Current directory: $(pwd)"
          echo "📋 Files:"
          ls -la
          echo "📄 Main.tf content (first 20 lines):"
          head -20 main.tf
          echo ""
          echo "🔧 Initializing Terraform..."
          terraform init -backend=false
          echo "✅ Terraform initialized"
          echo ""
          echo "🔍 Validating..."
          terraform validate
          echo "✅ Validation passed"

      - name: Deploy ${{ matrix.display }} (Create Method)
        working-directory: ${{ matrix.path }}
        run: |
          echo "🚀 Deploying ${{ matrix.display }} using create method..."
          echo "📁 Working from: $(pwd)"
          echo "📋 Confirming files are here:"
          ls -la *.tf
          
          # Use create method which is more reliable
          coder templates create ${{ matrix.name }} \
            --directory . \
            --message "Demo template: ${{ matrix.display }} - GitHub Actions deploy" \
            --yes || echo "Create failed, template might already exist"
          
          echo "✅ Template creation attempted"

      - name: Update ${{ matrix.display }} (Push Method)
        working-directory: ${{ matrix.path }}
        if: failure()  # Only run if create failed (template exists)
        run: |
          echo "📝 Template exists, updating with push method..."
          coder templates push ${{ matrix.name }} \
            --directory . \
            --message "Updated demo template: ${{ matrix.display }}" \
            --yes
          
          echo "✅ Template updated"

      - name: Verify Template
        run: |
          echo "🔍 Verifying template deployment..."
          coder templates list
          echo ""
          if coder templates list | grep -q "${{ matrix.name }}"; then
            echo "✅ Template ${{ matrix.name }} found!"
          else
            echo "❌ Template ${{ matrix.name }} not found!"
            exit 1
          fi

  summary:
    runs-on: ubuntu-latest
    needs: deploy-templates
    if: always()
    
    steps:
      - name: Deployment Summary
        run: |
          echo "# 🎯 Demo Template Deployment Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** ${{ needs.deploy-templates.result == 'success' && '✅ SUCCESS' || '❌ FAILED' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.deploy-templates.result }}" == "success" ]]; then
            echo "## 🚀 Ready for Demo!" >> $GITHUB_STEP_SUMMARY
            echo "Your templates are deployed and ready:" >> $GITHUB_STEP_SUMMARY
            echo "- \`business-demo-devcontainer\` - Modern Development" >> $GITHUB_STEP_SUMMARY
            echo "- \`business-demo-datascience\` - Data Science Environment" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Time to impress that Fortune 500 CTO!** 🎪" >> $GITHUB_STEP_SUMMARY
          else
            echo "## ❌ Deployment Issues" >> $GITHUB_STEP_SUMMARY
            echo "Check the workflow logs for details." >> $GITHUB_STEP_SUMMARY
          fi
